{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { createNavigatorFactory, useNavigationBuilder, DrawerRouter } from '@react-navigation/native';\nimport DrawerView from \"../views/DrawerView\";\n\nfunction DrawerNavigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n      openByDefault = _ref.openByDefault,\n      backBehavior = _ref.backBehavior,\n      children = _ref.children,\n      screenOptions = _ref.screenOptions,\n      rest = _objectWithoutProperties(_ref, [\"initialRouteName\", \"openByDefault\", \"backBehavior\", \"children\", \"screenOptions\"]);\n\n  var _useNavigationBuilder = useNavigationBuilder(DrawerRouter, {\n    initialRouteName: initialRouteName,\n    openByDefault: openByDefault,\n    backBehavior: backBehavior,\n    children: children,\n    screenOptions: screenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation;\n\n  return React.createElement(DrawerView, _extends({}, rest, {\n    state: state,\n    descriptors: descriptors,\n    navigation: navigation\n  }));\n}\n\nexport default createNavigatorFactory(DrawerNavigator);","map":{"version":3,"sources":["createDrawerNavigator.tsx"],"names":["screenOptions","rest","navigation","useNavigationBuilder","initialRouteName","openByDefault","backBehavior","children","createNavigatorFactory"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,sBAAA,EAAA,oBAAA,EAAA,YAAA,QAAA,0BAAA;AASA,OAAA,UAAA;;AAWA,SAAA,eAAA,CAAA,IAAA,EAOU;AAAA,MAPe,gBAOf,GAAA,IAAA,CAPe,gBAOf;AAAA,MAPe,aAOf,GAAA,IAAA,CAPe,aAOf;AAAA,MAPe,YAOf,GAAA,IAAA,CAPe,YAOf;AAAA,MAPe,QAOf,GAAA,IAAA,CAPe,QAOf;AAAA,MAFRA,aAEQ,GAAA,IAAA,CAFRA,aAEQ;AAAA,MADLC,IACK,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,UAAA,EAAA,eAAA,CAAA,CAAA;;AAAA,8BACmCE,oBAAoB,CAAA,YAAA,EAK/C;AACdC,IAAAA,gBADc,EACdA,gBADc;AAEdC,IAAAA,aAFc,EAEdA,aAFc;AAGdC,IAAAA,YAHc,EAGdA,YAHc;AAIdC,IAAAA,QAJc,EAIdA,QAJc;AAKdP,IAAAA,aAAAA,EAAAA;AALc,GAL+C,CADvD;AAAA,MACF,KADE,yBACF,KADE;AAAA,MACF,WADE,yBACF,WADE;AAAA,MACoBE,UADpB,yBACoBA,UADpB;;AAcR,SACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAFP,KAAA;AAGE,IAAA,WAAW,EAHb,WAAA;AAIE,IAAA,UAAU,EAAEA;AAJd,GAAA,CAAA,CADF;AAQD;;AAED,eAAeM,sBAAsB,CAArC,eAAqC,CAArC","sourcesContent":["import * as React from 'react';\nimport {\n  createNavigatorFactory,\n  useNavigationBuilder,\n  DefaultNavigatorOptions,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerRouter,\n} from '@react-navigation/native';\n\nimport DrawerView from '../views/DrawerView';\nimport type {\n  DrawerNavigationOptions,\n  DrawerNavigationConfig,\n  DrawerNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<DrawerNavigationOptions> &\n  DrawerRouterOptions &\n  DrawerNavigationConfig;\n\nfunction DrawerNavigator({\n  initialRouteName,\n  openByDefault,\n  backBehavior,\n  children,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    DrawerNavigationState,\n    DrawerRouterOptions,\n    DrawerNavigationOptions,\n    DrawerNavigationEventMap\n  >(DrawerRouter, {\n    initialRouteName,\n    openByDefault,\n    backBehavior,\n    children,\n    screenOptions,\n  });\n\n  return (\n    <DrawerView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  DrawerNavigationState,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap,\n  typeof DrawerNavigator\n>(DrawerNavigator);\n"]},"metadata":{},"sourceType":"module"}